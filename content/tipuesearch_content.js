var tipuesearch = {"pages": [{'title': 'HW1', 'text': '\n', 'tags': '', 'url': 'HW1.html'}, {'title': 'PCH18', 'text': '', 'tags': '', 'url': 'PCH18.html'}, {'title': 'Laptop and Notebook Component Replacement(筆記本電腦和筆記本電腦組件更換)', 'text': 'Overview(概觀) \n In this module, we will discuss the types of hard drives used in laptop computers, as well as how to replace or upgrade them. We will also discuss the types of memory used in laptop and notebook computers, and the difference between upgrading laptop or notebook memory and upgrading memory in a standard desktop computer. Lastly, we will discuss the types of hard drive failure you may experience with a notebook computer and the best way to identify the failure and repair it properly. \n 在本模塊中，我們將討論膝上型計算機中使用的硬盤驅動器類型，以及如何更換或升級它們。 我們還將討論筆記本電腦和筆記本電腦中使用的內存類型，以及升級筆記本電腦或筆記本電腦的內存與升級標準台式計算機中的內存之間的區別。 最後，我們將討論筆記本計算機可能遇到的硬盤故障類型，以及識別故障並正確修復的最佳方法。 \n Notebook Hard Drives(筆記型硬盤) \n Laptop storage has evolved over the years from using traditional HDDs, which are very large and require a lot of power, to using smaller and smaller variants. \n 多年來，筆記本電腦的存儲已經從使用非常大且需要大量電能的傳統硬盤驅動器發展到使用越來越小的變體。 \n Similar to the desktop, older generation laptops used IDE/PATA, but current technology uses SATA connectors, or in the case of mSATA directly plugs into a port on the motherboard. \n 與台式機類似，較早的筆記本電腦使用的是IDE / PATA，但當前的技術使用的是SATA連接器，或者在mSATA的情況下直接插入主板上的端 \n Whereas traditional desktop computers use a 3.5-inch HDD, laptops typically use a 2.5-inch hard drive. These drives contain capacity speeds comparable to their larger counterparts. Smaller notebooks might use an even smaller variant that is only 1.8 inches in diameter. These drives often operate at similar speeds to their larger counterparts, but may lack the same capacity for storage. These HDDs make use of a spinning disk with magnetic storage design. \n 傳統台式機使用3.5英寸HDD，而筆記本電腦通常使用2.5英寸硬盤。 這些驅動器的容量速度可與大型驅動器媲美。 較小的筆記本可能會使用直徑更小的變體，直徑僅為1.8英寸。 這些驅動器通常以與較大驅動器相似的速度運行，但可能缺少相同的存儲容量。 這些硬盤使用具有磁存儲設計的旋轉磁盤。 \n Current laptops, especially netbooks and other laptops that require thinner, lighter, and faster storage options, use solid-state disks (SSDs) following the 2.5, 1.8, or mSata form factor. Initially, manufacturers developed a hybrid disk combining an internal disk with a form of flash storage used to speed up access times. These were faster than traditional HDDs and much less expensive than a full SSD at the time. \n 當前的筆記本電腦，尤其是上網本和其他需要更薄，更輕和更快存儲選項的筆記本電腦，使用的固態硬盤（SSD）遵循2.5、1.8或mSata尺寸規格。 最初，製造商開發了一種混合磁盤，該磁盤將內部磁盤與用於加速訪問時間的閃存形式結合在一起。 它們比傳統的HDD更快，並且當時的價格比完整的SSD便宜得多。 \n SSDs contain no actual disk or moving parts. They are highly resistant to shock and movement, and have low latency and high access speeds. The performance of SSDs is far superior to traditional spinning hard disk drives, and they use less power than traditional hard disks, as well, which makes them ideal for mobile applications such as laptops and notebooks. HDD manufacturers have improved the design of SSDs, making them more resilient to I/O writes and reads and less susceptible to the failure first generation SSDs could suffer from if not configured correctly. \n SSD不包含實際的磁盤或活動部件。 它們具有很高的抗衝擊和移動性，並具有低延遲和高訪問速度。 SSD的性能遠遠優於傳統的旋轉式硬盤驅動器，並且比傳統的硬盤耗電少，這使其成為筆記本電腦和筆記本電腦等移動應用程序的理想選擇。 HDD製造商已經改進了SSD的設計，使其對I / O寫入和讀取的彈性更大，並且如果配置不正確，第一代SSD可能會遭受的故障影響較小。 \n In addition to traditional SATA or mSATA SSDs, many laptop manufacturers have chosen to incorporate embedded multi-media cards (eMMCs) in smaller 2-in-1 laptops, Chromebooks, or tablets that are designed with a detachable keyboard. eMMCs have faster access times than traditional HDDs, but are slower than an SSD. As the name implies, this storage device is an integrated circuit (IC) chip located on the motherboard. Currently, eMMCs most often come in either 16 GB, 32 GB or 64 GB capacity. Manufacturers most often include a micro secure digital (MicroSD) card reader and USB port to allow for external storage. \n 除了傳統的SATA或mSATA SSD之外，許多筆記本電腦製造商還選擇將嵌入式多媒體卡（eMMC）集成到較小的2合1筆記本電腦，Chromebook或配有可拆卸鍵盤的平板電腦中。 eMMC的訪問時間比傳統HDD快，但比SSD慢。 顧名思義，此存儲設備是位於主板上的集成電路（IC）芯片。 當前，eMMC最通常具有16 GB，32 GB或64 GB的容量。 製造商最經常使用的是微型安全數字（MicroSD）讀卡器和USB端口，用於外部存儲。 \n Laptop hard drives and SSDs are generally upgradable and replaceable, but the “internal storage” label for eMMC is not. \n 筆記本電腦硬盤和固態硬盤通常可以升級和更換，但是eMMC的“內部存儲”標籤卻不是。 \n With HDDs and SSDs being standard form factors (2.5-inch or 1.8-inch varieties), they can easily be removed and replaced with a larger capacity or higher speed version as long as the new drive matches in physical size and connection type (SATA or mSATA). To replace a hard drive, the technician simply removes the drive in accordance with the manufacturer’s instructions. It is always important to check with the laptop manufacturer’s instructions on the best way to remove the drive. Some models have a direct access area from the bottom of the laptop, while others require full disassembly of the machine, including the keyboard and casing. \n HDD和SSD是標準尺寸（2.5英寸或1.8英寸），只要新驅動器的物理尺寸和連接類型（SATA或SATA）相匹配，就可以輕鬆地將它們卸下並替換為更大容量或更高速的版本。 mSATA）。 要更換硬盤驅動器，技術人員只需按照製造商的說明卸下驅動器。 請務必與筆記本電腦製造商的說明一起查看拆卸驅動器的最佳方法。 一些型號從筆記本電腦的底部可以直接進入區域，而其他一些型號則需要完全拆卸機器，包括鍵盤和機殼。 \n \n Laptop hard drives. Photo used under CC-BY license from Ray Dehler. \n 筆記本電腦硬盤。由Ray Dehler根據CC-BY許可使用的照片。 \n \n SSD. Photo used under CC-BY license from\xa0Intel. \n SSD。照片經英特爾CC-BY許可使用。 \n Memory \n Laptops use memory modules similar to their larger desktop counterparts. In desktops, DDR, DDR2, and DDR3 RAM modules are used to upgrade our systems, based upon the memory slots provided by the motherboard, and the speed and size accepted by the motherboard. Laptops, similarly, require the proper size and speed modules for their motherboards. Therefore, it is important to check the manufacturer’s manual for a laptop. Laptop memory also comes in DDR, DDR2, and DDR3 varieties, but laptops use the SODIMM (small outline dual in-line memory module) form factor. These are much smaller, more compact versions of the standard DDR, DDR2, and DDR3 modules, but they operate at the same speed and capacity as the larger versions. \n 筆記本電腦使用的內存模塊與大型台式機相似。在台式機中，DDR，DDR2和DDR3 RAM模塊用於根據主板提供 的內存插槽以及主板可接受的速度和大小來升級我們的系統。類似地，筆記本電腦需要適合其主板的尺寸和 速度模塊。因此，請務必查看筆記本電腦的製造商手冊。筆記本電腦內存還提供DDR，DDR2和DDR3多種類型 ，但筆記本電腦使用SODIMM（小尺寸雙列直插式內存模塊）尺寸。這些是標準DDR，DDR2和DDR3模塊的更小 ，更緊湊的版本，但是它們以與較大版本相同的速度和容量運行。 \n SODIMM in a laptop. Photo used under CC-BY-NC license from\xa0Ben willams. \n 筆記本電腦中的SODIMM。本圖片由Ben Willams根據CC-BY-NC許可使用。 \n Replacing and upgrading memory is a fairly simply process, similar to replacing memory in a desktop machine. First, remove the power by shutting down the laptop, removing the power cord, and (if possible) removing the battery from the laptop. Next, replace the existing memory module, or add a second one, if applicable. Some laptops, like the one shown above, have a small plastic door covering the memory slots for easy access. Others may require full disassembly to access the memory slots. In a desktop computer, the modules are inserted at a straight-up-and-down vertical angle (90 degrees), but with laptops, the modules are inserted at a 45-degree angle first. Then the modules are pushed down into place once they are fully inserted into the memory slot. This is required due to the space limitations in the laptop. \n 更換和升級內存是一個相當簡單的過程，類似於在台式機中更換內存。首先，請關閉筆記本電腦，拔下電源 線，並（如果可能）從筆記本電腦中取出電池，以斷開電源。接下來，更換現有的內存模塊，或添加第二個 內存模塊（如果適用）。某些筆記本電腦，如上圖所示，有一個小的塑料門蓋住內存插槽，以便於使用。其 他可能需要完全拆卸才能訪問內存插槽。在台式計算機中，模塊以垂直向上和向下的垂直角度（90度）插入 ，但在筆記本電腦中，模塊首先以45度角插入。將模塊完全插入內存插槽後，將其向下推入到位。由於筆記 本電腦的空間限制，這是必需的。一些筆記本電腦只有一個內存插槽，而其他筆記本電腦有兩個插槽。一些 筆記本電腦的內存可能焊接在主板上，因此無法升級或刪除內存。請始終查看筆記本電腦的手冊，以獲取有 關筆記本電腦可以容納多少個模塊（如果有），可以容納多少GB以及模塊速度的詳細信息。例如，在下面的 下圖中，我們看到一個2 GB DDR2內存模塊，其工作頻率為6400 MBps或800 MHz。 \n Some laptops have a single memory slot, while others have two slots. Some laptops may have their memory soldered onto the motherboard, making upgrading or removing the memory impossible. Always check your laptop’s manual for details on how many modules your laptop will accept (if any), how many gigabytes they can be, and the speed of the modules. For example, in the bottom image below, we see a 2 GB DDR2 memory module that operates at 6400 MBps, or 800 MHz. \n 一些筆記本電腦只有一個內存插槽，而其他筆記本電腦有兩個插槽。有些筆記本電腦的內存可能焊接在主板 上，因此無法升級或刪除內存。請始終查看筆記本電腦的手冊，以獲取有關筆記本電腦可以容納多少個模塊 （如果有），可以容納多少GB以及模塊速度的詳細信息。例如，在下面的下圖中，我們看到一個2 GB DDR2 內存模塊，其工作頻率為6400 MBps或800 MHz。 \n 2 GB DDR2 memory module. Photo used under CC-BY-SA license from Cheon Fong Liew. \n 2 GB DDR2內存模塊。天鳳六照根據CC-BY-SA許可使用的照片。 \n', 'tags': '', 'url': 'Laptop and Notebook Component Replacement(筆記本電腦和筆記本電腦組件更換).html'}, {'title': 'Troubleshooting Hard Drives(硬盤驅動器故障排除)', 'text': 'Hard drive failures are fairly uncommon occurrences for computers overall, but in laptops they have a higher occurrence rate than in desktops. Usually, this occurs when something jars the laptop while the hard disk is working. Another cause of hard drive failure is an overheated hard drive. The hard drive, like other devices in the computer, requires adequate cooling to ensure proper operation. If the hard drive overheats, you need to check to see if the laptop is receiving adequate cooling. You can do this by making sure the air intake and fans are working properly and are not filled with dust. \n 硬盤故障在整個計算機上很少發生，但在筆記本電腦中，其發生率要高於台式機。 通常，當硬盤工作時筆記本電腦受到震動時，會發生這種情況。 硬盤驅動器故障的另一個原因是硬盤驅動器過熱。 與計算機中的其他設備一樣，硬盤驅動器也需要充分冷卻以確保正常運行。 如果硬盤驅動器過熱，則需要檢查筆記本電腦是否受到足夠的冷卻。 您可以通過確保進氣口和風扇正常工作並且沒有灰塵的方式來執行此操作。 \n Mechanical failures and defects are another possible cause of hard drive failure in laptops and notebooks. Bad sectors in the hard disk, the motor’s failure to perform rotation, power supply issues, and many other issues can cause hard drive failures. An old hard disk may create problems, or mechanical failure can occur if you have formatted the hard disk too many times. Normally, you can hear a mechanical failure — there may be a clicking sound coming from the disk, or you will hear the disk fail to “spin up” when powered on. \n 機械故障和缺陷是筆記本電腦和筆記本電腦中硬盤驅動器出現故障的另一個可能原因。 硬盤中的壞扇區，電機無法旋轉，電源問題以及許多其他問題都可能導致硬盤驅動器故障。 舊的硬盤可能會造成問題，或者如果您對硬盤進行了過多的格式化，則可能會導致機械故障。 通常，您會聽到機械故障的聲音-磁盤可能會發出喀嗒聲，或者您會在通電後聽到磁槃無法“旋轉”的聲音。 \n Other issues with hard drives include data becoming corrupted or invalid due to virus infection or attacks, abnormal system shutdown, accidental cancellation of a running program, frequent power failure, and many other causes. These are not issues solely in laptops; these problems can occur with both laptop and desktop models. \n 硬盤驅動器的其他問題包括由於病毒感染或攻擊，異常的系統關閉，意外取消正在運行的程序，頻繁的電源故障以及許多其他原因而導致數據損壞或無效。 這些不僅僅是筆記本電腦的問題； 筆記本電腦和台式機型號都可能出現這些問題。 \n To determine if a laptop hard drive has failed, you must follow a logical troubleshooting methodology. First, attempt to boot up the computer. If you cannot see the display working, then listen for the hard disk. Did you hear it “spin up” when you powered on the machine? If not, it is likely a laptop power issue and not a hard drive issue. Check the battery and the AC adapter to ensure the laptop is receiving power. \n 要確定筆記本電腦硬盤驅動器是否發生故障，您必須遵循邏輯上的故障排除方法。 首先，嘗試啟動計算機。 如果看不到顯示屏，請收聽硬盤。 打開機器電源時，您是否聽到過它“旋轉”的聲音？ 如果不是，則很可能是筆記本電腦電源問題，而不是硬盤驅動器問題。 檢查電池和交流適配器，以確保膝上型計算機已接通電源。 \n If the laptop display did turn on, then you need to see if the operating system boots. If it does not boot, it could be a data corruption issue or a hard drive failure. First, try booting the laptop from the AC adapter instead of the battery. Did that work? If so, it may be that the battery isn’t providing enough power to spin the hard drive properly. If that does not work, next, check the BIOS to see if the hard drive is being recognized. If the drive is not recognized in the BIOS, check the physical connections (power and data cables, like IDE/PATA and SATA). If the hard drive is recognized in the BIOS, but the operating system does not boot, it could be that the data on the drive has become corrupted; therefore, the operating system may need to be reinstalled and the user data may need to be restored from backup. \n 如果筆記本電腦顯示屏確實打開了，那麼您需要查看操作系統是否啟動。 如果無法啟動，則可能是數據損壞問題或硬盤故障。 首先，嘗試從交流適配器而不是電池引導筆記本電腦。 那行嗎？ 如果是這樣，則可能是電池電量不足，無法正確旋轉硬盤驅動器。 如果那不起作用，則接下來，檢查BIOS以查看硬盤驅動器是否被識別。 如果在BIOS中無法識別驅動器，請檢查物理連接（電源和數據電纜，例如IDE / PATA和SATA）。 如果在BIOS中識別到硬盤驅動器，但操作系統無法引導，則可能是驅動器上的數據已損壞；否則，可能是驅動器上的數據已損壞。 因此，可能需要重新安裝操作系統，並且可能需要從備份中還原用戶數據。 \n If the drive isn’t recognized by the BIOS or loading the operating system, you may have a hard drive failure. Listen to the hard drive; do you hear a mechanical clicking sound? If you do, your hard drive is likely failing and should be replaced as soon as possible. If you do not hear any clicking noises, there might be bad sectors on the disk, so perform disk maintenance procedures, such as “check disk” (CHKDSK) or “disk defragmentation” (DISK DEFRAG). \n 如果BIOS無法識別驅動器或無法加載操作系統，則可能是硬盤驅動器出現故障。 聽硬盤驅動器； 您聽到機械的喀噠聲嗎？ 如果這樣做，您的硬盤驅動器可能會發生故障，應盡快更換。 如果沒有聽到任何咔嗒聲，則表明磁盤上可能存在壞扇區，因此請執行磁盤維護過程，例如“檢查磁盤”（CHKDSK）或“磁盤碎片整理”（DISK DEFRAG）。 \n', 'tags': '', 'url': 'Troubleshooting Hard Drives(硬盤驅動器故障排除).html'}, {'title': 'PCH19', 'text': '', 'tags': '', 'url': 'PCH19.html'}, {'title': 'Overview(總覽)', 'text': 'In this module on notebooks, we will discuss the various types of batteries used in notebook and laptop computers, along with battery construction, battery care, and various power level indicators. We will also discuss the variety of power sources a notebook has access to, including its battery, AC adapter, and docking stations. Next, we will discuss the proper disposal procedures that should be used when someone upgrades or breaks their notebook. Finally, we will discuss the physical security of notebooks. We will look at the construction of these devices, as well as the proper installation of the security cable and how it is connected to the notebook. \n 在筆記本電腦上的該模塊中，我們將討論筆記本電腦和筆記本電腦中使用的各種類型的電池，以及電池結構 ，電池維護和各種電量指示器。我們還將討論筆記本電腦可以使用的各種電源，包括電池，AC適配器和擴展 塢。接下來，我們將討論當某人升級或損壞筆記本時應該使用的正確處置程序。最後，我們將討論筆記本的 物理安全性。我們將研究這些設備的結構，安全電纜的正確安裝以及如何將其連接到筆記本計算機。 \n Battery types(電池類型) \n Laptops and notebooks can receive power from several different types of batteries. The batteries are used to provide direct current (DC) to your notebook, and the batteries are then recharged by the alternating current (AC) adapter that connects your notebook to the wall outlet. The AC adapter actually works as a transformer, converting the wall outlet’s high-voltage AC into low-voltage DC that your notebook uses to charge its battery. \n 筆記本電腦和筆記本電腦可以通過幾種不同類型的電池供電。電池用於為筆記本計算機提供直流（DC），然 後通過將筆記本計算機連接至牆上插座的交流（AC）適配器為電池充電。交流適配器實際上起著變壓器的作 用，將壁裝電源插座的高壓AC轉換為筆記本計算機用來為電池充電的低壓DC。 \n \n Battery cells. Photo used under CC-BY-SA license from\xa0Uwe Hermann. \n 電池芯。 Uwe Hermann根據CC-BY-SA許可使用的照片。 \n The notebook battery is an enclosed plastic casing with individual battery cells on the inside, as shown in the images above. Older notebooks used either nickel-cadmium (NiCd or NiCad) or nickel-metal hydride (NiMH) batteries. These types of batteries are seldom used in modern notebooks and laptops because they suffered from what is termed the “memory effect.” Basically, the “memory effect” occurs when a battery loses its capacity to fully recharge if it is discharged repeatedly the same amount and then recharged without being fully drained first. For example, if every time your notebook battery’s charge was at 20 percent you went and recharged it, then 20 percent charge would become the new zero for your battery, reducing the overall charge available to only 80 percent of the original capacity. \n 筆記本電池是一個封閉的塑料外殼，內部裝有單個電池，如上圖所示。較舊的筆記本電腦使用鎳鎘 （NiCd或NiCad）或鎳氫（NiMH）電池。這些類型的電池很少用於現代筆記本電腦和筆記本電腦，因為它們 遭受了所謂的“記憶效應”。基本上，如果反复放電相同量的電池而失去其完全充電的能力，則發生“記憶效應 ”，然後先充電而又沒有完全耗盡。例如，如果您每次筆記本電池的電量為20％時都要去充電，那麼20％的 電量將成為電池的新零，從而將總可用電量減少到原始容量的80％。 \n Both of these battery types were replaced with lithium-ion batteries. The lithium-ion batteries do not suffer from the memory effect issue. They perform better than other types of batteries, and are lighter in weight, which increases a notebook’s mobility. Lithium-ion batteries also feature a rapid-charging option that allows faster charging when the user is in a hurry. These batteries are more environmentally friendly than the previous types, as well. \n 這兩種電池都被鋰離子電池取代。鋰離子電池不會出現記憶效應問題。它們的性能比其他類型的電池更好， 並且重量更輕，從而增加了筆記本的移動性。鋰離子電池還具有快速充電選項，當用戶急忙時可以更快地充 電。這些電池也比以前的電池更環保。 \n To best care for your notebook or laptop, always use the approved battery type for your model. Using unapproved batteries in your notebook can lead to the notebook catching fire or exploding. In order to maintain notebook batteries at peak operating efficiency, keep the batteries at room temperature and avoid heat. If your notebook has a full charge and is subjected to high temperatures, the longevity of your battery will decrease. Batteries deteriorate over time, so purchase one with the most recent manufacturing date for the longest life. Also, getting a higher-capacity battery will provide a longer battery life on a given charge. Since lithium-ion batteries do not have a memory effect, it is often better to use partial-discharge cycles for notebooks and laptops that use those batteries. Note, while there is no memory effect, some lithium-ion batteries suffer from a “digital memory” that decreases the accuracy of the power gauge. To recalibrate the power gauge, you need to fully discharge the battery routinely, such as every few months, then completely recharge it. Lastly, if you are planning on storing your notebook for a while, it is best to discharge the battery to about 50 percent first, then store it in a cool, dry place. This will prolong the life of the battery and prevent you from having to waste money on a replacement. \n 為了最好地保護筆記本電腦或筆記本電腦，請始終為您的型號使用認可的電池類型。在筆記本計算機中使用 未經許可的電池可能會導致筆記本計算機著火或爆炸。為了使筆記本電池保持最高工作效率，請將電池保持 在室溫下並避免發熱。如果您的筆記本計算機充滿電並且處於高溫下，則電池的壽命會降低。電池會隨著時 間的流逝而變質，因此請購買製造日期最近的電池以延長使用壽命。同樣，在給定的電量下，使用容量更大 的電池將提供更長的電池壽命。由於鋰離子電池沒有記憶效應，因此對於使用這些電池的筆記本電腦和筆記 本電腦，最好使用部分放電循環。請注意，雖然沒有記憶效應，但某些鋰離子電池會遭受“數字記憶”的困擾 ，這會降低功率計的精度。要重新校準功率計，您需要定期（例如每幾個月一次）對電池完全放電，然後將 其完全充電。最後，如果您打算將筆記本電腦存放一段時間，則最好先將電池放電約50％，然後將其存放在 陰涼乾燥的地方。這樣可以延長電池壽命，並避免您在更換電池時浪費金錢。 \n The amount of battery life is indicated in a number of ways in a notebook, depending on the computer model. All modern operating systems provide a digital gauge inside the operating system. This indication can be set by the user to show either the percentage of battery life remaining (such as 53 percent left), the time remaining until the battery runs out (such as 1 hour, 43 minutes to empty), or the time to full charge (such as 34 minutes to full charge). Some models of batteries, though, have a battery gauge included on the battery itself. This will use a scale, such as five circles that will light up to show the remaining life of the battery. \n 根據筆記本計算機的型號，筆記本電腦可以通過多種方式指示電池壽命。所有現代操作系統都在操作系統內 部提供數字儀表。用戶可以設置此指示以顯示剩餘電池壽命百分比（例如剩餘53％），直到電池用完的剩餘 時間（例如1小時43分鐘用完）或充滿時間充電（例如充滿電需要34分鐘）。但是，某些型號的電池在電池 本身中附帶一個電池電量計。這將使用一個刻度，例如五個圓圈，它將點亮以顯示電池的剩餘壽命。 \n \n Laptop battery. Photo used under CC-BY-SA license from Intel Free Press. \n 筆記本電池。照片由Intel Free Press根據CC-BY-SA許可使用。 \n', 'tags': '', 'url': 'Overview(總覽).html'}, {'title': 'AC Power(交流電)', 'text': 'As previously stated, the battery is used to provide direct current to your notebook and the battery is then recharged by the AC adapter that connects your laptop to the wall outlet. While the battery directly powers the notebook’s components, much like a power supply in a desktop, the battery doesn’t perform any transformation of the power it receives or sends out. These functions are handled by the AC adapter. Many docking stations provide the ability to either use the regular AC adapter as their power source, or use a built-in AC adapter to perform the transformation of the power from AC to DC. If the laptop is using a docking station, it still uses the battery to provide power to the laptop, and the docking station to charge the laptop’s battery. A\xa0 port replicator\xa0, on the other hand, requires the AC adapter to perform the transformation for it. \n 如前所述，電池用於為筆記本計算機提供直流電，然後通過將筆記本計算機連接至牆上插座的交流適配器為 電池充電。儘管電池可以直接為筆記本計算機的組件供電，就像台式機中的電源一樣，但是電池不會對其接 收或發出的電能進行任何轉換。這些功能由交流適配器處理。許多擴展塢都可以使用常規的AC適配器作為電 源，也可以使用內置的AC適配器執行從AC到DC的電源轉換。如果筆記本電腦使用的是擴展塢，它仍會使用電 池為筆記本電腦供電，而擴展塢則使用筆記本電腦的電池充電。另一方面，端口復制器需要AC適配器為其執 行轉換。 \n \n Docking station rear view. Photo used under CC-BY license from\xa0TolbXela. \n 擴展塢後視圖。照片由TolbXela根據CC-BY許可使用。 \n \n \n \n Docking stations are used to add capabilities to a laptop and create a "desktop" experience. For example, in the image above, you can see that the docking station has numerous USB ports, a PS/2 port for keyboard/mouse, a modem port, Ethernet port, VGA and DVI display outputs, audio input and output ports, as well as serial and parallel connections. Some docking stations even have built-in hard drives and optical drives for additional storage. A port replicator, on the other hand, only provides the same ports that already exist on the laptop. This is used for quick connection and disconnection to the various external devices when the laptop is returned to the office environment. \n 擴展塢用於向筆記本電腦添加功能並創建“桌面”體驗。例如，在上圖中，您可以看到擴展塢具有多個USB端 口，一個用於鍵盤/鼠標的PS / 2端口，一個調製解調器端口，以太網端口，VGA和DVI顯示輸出，音頻輸入 和輸出端口，如以及串行和並行連接。某些擴展塢甚至具有內置硬盤驅動器和光盤驅動器，用於額外存儲。 另一方面，端口復制器僅提供筆記本電腦上已經存在的相同端口。當筆記本電腦返回辦公環境時，可用於快 速連接和斷開與各種外部設備的連接。 \n \n \n \n', 'tags': '', 'url': 'AC Power(交流電).html'}, {'title': 'Proper Disposal Procedures(正確的處置程序)', 'text': 'Rechargeable laptop batteries contain hazardous materials such as mercury, cadmium, and lead. Many states have laws governing the disposal of batteries containing toxic materials. Often disposing of them in the trash and sending them to a landfill is illegal. Recycling, sometimes referred to as eCycling in the case of computers and other electronics, reduces the amount of toxic elements entering the waste stream and is often the required or preferred disposal method. Recycling saves landfill space, conserves our natural resources, and reduces the amount of electronic waste generated by residents in the state. For example, according to the State of Maryland, eCycling reduces more than 150,000 tons of waste every year. Local regulations (state, county, or city) dictate the proper methods of disposing of the physical laptop and its components. \n 筆記本電腦可充電電池包含有害物質，例如汞，鎘和鉛。許多州都有管理含毒物質電池處置的法律。通常， 將它們丟棄在垃圾桶中並送到垃圾填埋場是非法的。回收，有時在計算機和其他電子設備中稱為“循環”，可 減少進入廢物流的有毒元素的數量，這通常是必需或首選的處置方法。回收利用可節省垃圾填埋場的空間， 節約我們的自然資源，並減少該州居民產生的電子廢物量。例如，據馬里蘭州稱，電子騎車每年可減少15萬 噸以上的廢物。當地法規（州，縣或市）規定了處置物理筆記本電腦及其組件的正確方法。 \n If, instead of disposing of the entire laptop, you wish to sell the device, you should first remove your personal information from the laptop. The best way to do this is to perform a hard drive format using overwrite software. This is also known as a “secure erase,” where every portion of the hard disk is rewritten with a “0” in order to fully clear your personal data from the device. Then, if necessary, you can reinstall the operating system and sell the device. \n 如果您想出售設備而不是丟棄整個筆記本電腦，則應首先從筆記本電腦中刪除個人信息。最好的方法是使用 覆蓋軟件執行硬盤驅動器格式。這也稱為“安全擦除”，其中硬盤的每個部分都用“ 0”重寫，以便從設備中完 全清除您的個人數據。然後，如有必要，您可以重新安裝操作系統並出售設備。 \n', 'tags': '', 'url': 'Proper Disposal Procedures(正確的處置程序).html'}, {'title': 'Security(安全)', 'text': 'Security cables are used to ensure that laptops are not physically removed from a particular area. Security cables are constructed much like a bicycle security lock, with a thick, carbon strengthened steel or metal cable that has a loop on one end and a lock on the other. The lock end has a T-shaped head that is inserted into the Kensington security slot on the computer (named after the first company to produce these locks). The locks are set using either a key or a combination-style lock. The other end, with the loop, can then be secured to a stationary device, like a pole or the desk itself. Often, these are installed by looping the lock end through the loop end, as it goes around a portion of the desk, securing the security lock to a location on the desk. Some security cables also have an audible alarm feature that alerts when someone tries to force the lock. Remember that these physical security measures only work when used properly. Tether a laptop to a strong, unbreakable, non-movable object. \n 安全電纜用於確保未從特定區域物理移除便攜式計算機。安全纜線的結構很像自行車安全鎖，由一根粗的， 碳增強的鋼或金屬纜線組成，該纜線的一端有一個環，另一端有一個鎖。鎖端有一個T形頭，該頭插入計算 機上的Kensington安全插槽（以生產這些鎖的第一家公司的名字命名）。可以使用鑰匙或組合鎖來設置鎖。 然後可以將帶有環的另一端固定到固定裝置，例如桿子或桌子本身。通常，通過將鎖端繞在桌子的一部分周 圍，將鎖端穿過環形端進行安裝，從而將安全鎖固定到桌子上的某個位置，從而進行安裝。一些安全電纜還 具有聲音警報功能，當有人試圖強行鎖定時會發出警報。請記住，這些物理安全措施只有在正確使用後才能 起作用。將筆記本電腦系在堅固，堅固，不可移動的物體上。 \n Kensington lock connected. Image used under CC-BY-SA from\xa0Wikimedia Commons. \n Kensington鎖已連接。來自Wikimedia Commons的CC-BY-SA使用的圖像 \n \n Security cable. Photo used under CC-BY-SA license from\xa0Satoly. \n 安全電纜。照片由Satoly根據CC-BY-SA許可使用。 \n \n Laptop lock. Photo used under CC-BY-SA license from\xa0Seth Werkheiser. \n 筆記本電腦鎖。照片由Seth Werkheiser根據CC-BY-SA許可使用。 \n', 'tags': '', 'url': 'Security(安全).html'}, {'title': 'HW2', 'text': '\n from random import shuffle list = [40523138, 40523148, 40723217, 40728238, 40823148, 40823152, 40923201, 40923202, 40923203, 40923204, 40923205, 40923206, 40923207, 40923208, 40923209, 40923210, 40923211, 40923212, 40923213, 40923214, 40923216, 40923217, 40923218, 40923219, 40923220, 40923221, 40923223, 40923224, 40923225, 40923226, 40923227, 40923228, 40923229, 40923230, 40923231, 40923232, 40923233, 40923234, 40923235, 40923236, 40923237, 40923238, 40923239, 40923240, 40923241, 40923242, 40923243, 40923244, 40923245, 40923246, 40923247, 40923248, 40923249, 40923250, 40923251, 40923252, 40923253] shuffle(list) n = 5 m = int(len(list)/n) list2 = [] for i in range(0, len(list),m):  list2.append(list[i:i+m]) print(list2) \n', 'tags': '', 'url': 'HW2.html'}, {'title': 'HW3', 'text': '', 'tags': '', 'url': 'HW3.html'}, {'title': '11 Check Primality Functions', 'text': 'Ask the user for a number and determine whether the number is prime or not. (For those who have forgotten, a prime number is a number that has no divisors.). You can (and should!) use your answer to\xa0 Exercise 4 \xa0to help you. Take this opportunity to practice using functions, described below. \n 向用戶詢問一個數字，並確定該數字是否為質數。 （對於那些忘記的人，質數是沒有除數的數。）您可以 （並且應該！）使用練習4的答案來幫助您。藉此機會練習使用如下所述的功能。 \n Discussion(討論區) \n Concepts for this week(本週的概念): \n \n Functions(職能) \n Reusable functions(可重用功能) \n Default arguments(默認參數) \n \n Functions(職能) \n One of the tools programming gives us is the ability to break down problems into easier (or perhaps previously solved) or reusable subproblems. It is good practice to have a function have a single purpose, and the name of that function should hint at it’s purpose in some way. \n 編程提供給我們的工具之一是能夠將問題分解為更簡單（或可能先前解決）或可重用的子問題。優良作法是讓一個功能具有單一目的，並且該功能的名稱應以某種方式暗示其目的。 \n Most programming languages have this idea of a function, subroutine, or subprogram. In Python, a function is a programming construct that allows exactly that. \n 大多數編程語言都具有函數，子例程或子程序的概念。在Python中，函數是一種允許這樣做的編程構造。 \n Let’s look at a simple example(\xa0讓我們看一個簡單的例子): \n def get_integer():\n    return int(input("Give me a number: ")) \n In this small example, we used the same code that asks a user for input as a tabbed  line underneath this\xa0 def \xa0 statement. The \xa0 def \xa0 means that everything tabbed underneath  is a function. The name \xa0 get_integer() \xa0 is just a name that I (the programmer) made up.  If I just include this code inside a Python file and run it, nothing will happen -  all I have done so far is wrapped my code inside of a function; I never told my  program to actually RUN my function. \n 在這個小示例中，我們使用了相同的代碼，要求用戶在此def語句下方輸入為選項卡行。 def表示位於其下 的所有選項卡都是一個函數。名稱get_integer（）只是我（程序員）組成的名稱。如果我只是將此代碼包 含在Python文件中並運行它，則將不會發生任何事情-到目前為止，我所做的一切都將我的代碼包裝在一個 函數中；我從未告訴過我的程序實際運行我的功能。 \n def get_integer():\n    return int(input("Give me a number: "))\n\n  age = get_integer()\n  school_year = get_integer()\n  if age > 15:\n    print("You are over the age of 15")\n  print("You are in grade " + str(school_year)) \n What I have done here is\xa0 called \xa0 the function (told it to run) by writing \xa0 age = get_integer() . When this line of code runs, what happens is the program will \xa0 execute \xa0 (run) the function by asking me for a number, then \xa0 returning \xa0 it  (giving it back to me) by saving it inside the variable \xa0 age . Now when I want to ask  the user for another number (this time representing the school year), I do the same  thing with the variable \xa0 school_year . \n \n 通過寫age = get_integer（），我在這裡所做的被稱為函數（告訴它運行）。當這行代碼運行時，程序 將通過詢問我的數字來執行（運行）該函數，然後將其保存在變量age中以將其返回（交還給我）。現在，當 我想問用戶另一個數字（這次代表學年）時，我對變量school_year做同樣的事情。 \n Reusable functions(可重用功能) \n This is all well and good, but I can make my function do much more for me. Right now, my function will always ask the user for a number by printing the string\xa0 "Give me a number: " . What if I want to print a different string every time I ask the user for a number, but otherwise use the same idea for the function? In other words, I want a variable parameter in my function that changes every time I call the function based on something I (the programmer) want to be different. \n 這一切都很好，但是我可以讓我的功能為我做更多的事情。現在，我的函數將始終通過打印字符串“給我一 個數字：”來要求用戶輸入數字。如果我想每次問用戶一個數字時都想打印一個不同的字符串，但對於該函 數使用相同的想法怎麼辦？換句話說，我希望函數中的變量參數在每次調用函數時都根據我（程序員）希望 與眾不同的事物而改變。 I can do this by\xa0 passing \xa0 (giving) my function a variable. Like this( 我可以通過傳遞（給我 的）函數一個變量來做到這一點。像這樣: \n def get_integer(help_text):\n    return int(input(help_text)) \n Now what I can do when I call the function is something like this( 現在，當我調用該函數時 ，我可以做的就是這樣 : \n def get_integer(help_text):\n    return int(input(help_text)) \n  age = get_integer("Tell me your age: ")\n  school_year = get_integer("What grade are you in? ")\n  if age > 15:\n    print("You are over the age of 15")\n  print("You are in grade " + str(school_year)) \n \n Now it is easier for a user to use the program, because the help text is different. \n These variables you pass to functions are called \xa0 variables , \xa0 parameters , or \xa0 arguments . \n 現在，由於幫助文本不同，因此使用戶更容易使用該程序。 傳遞給函數的這些變量稱為變量，參數或數。 \n Default arguments(默認參數) \n In the example above, once I have added an\xa0 argument \xa0to my function, I always have to give an argument when I call the function. I can’t forget to give the\xa0 get_integer() \xa0function from above a string to print to the screen. In some cases, I want there to be a “default” behavior for my function that happens when I create an argument for it but don’t give it any. \n 在上面的示例中，在向函數添加參數後，在調用函數時始終必須提供參數。我不能忘記從字符串上方給get_integer（）函數打印到屏幕上。在某些情況下，我希望函數有一個“默認”行為，這種行為會在我為其創建參數但不提供任何參數時發生。 \n In the example above, if I don’t give a custom string (which may be 95% of the time I use this function), I just want the\xa0 input() \xa0 line to say \xa0 "Give me a number: " \xa0 and I want to save myself the trouble of writing this every single time I call the function. So what I can do is give my function \xa0 default arguments . Like so: \n 在上面的示例中，如果我不提供自定義字符串（使用該函數的時間可能是95％），我只想讓input（）行說 “給我一個數字：”，而我想節省了我每次調用該函數時編寫此代碼的麻煩。所以我能做的就是給我的函數提 供默認參數。像這樣 \n  def get_integer(help_text="Give me a number: "):\n    return int(input(help_text))\n \n What happens now is I can use the function in two ways: by giving it an argument and by NOT giving it an argument. \n 現在發生的事情是我可以通過兩種方式使用該函數：通過給它一個參數和不給它一個參數。 \n  def get_integer(help_text="Give me a number: "):\n    return int(input(help_text))\n\n  age = get_integer("Tell me your age: ")\n  school_year = get_integer()\n  if age > 15:\n    print("You are over the age of 15")\n  print("You are in grade " + str(school_year)) \n The first time I call the function, it will print\xa0 "Tell me your age: " , but the second time, it will print \xa0 "Give me a number: " , because I did not give it a string and it will execute the default behavior. \n 第一次調用該函數時，它將打印“告訴我您的年齡：”，但是第二次它將顯示“給我一個數字：”，因為我沒有 給它提供字符串，它將執行默認行為。 \n Recap(回顧) \n What a function does is wrap a piece of code that we want to reuse, labels it, and allows us to use it again relatively easily. You can add variables to the functions to make your code even MORE reusable, and you can add default arguments to these variables. \n 函數的作用是包裝我們要重用的一段代碼，對其進行標記，並允許我們相對容易地再次使用它。您可以將變量添加到函數中，以使代碼更加可重用，並且可以將默認參數添加到這些變量中。 \n Functions are a bit strange to deal with at first, but once you master them, they will be your savior in programming. Besides, the whole point of learning programming is abstraction, problem solving, breaking down problems, and that’s exactly what functions are all about. \n 一開始處理函數有點奇怪，但是一旦掌握了這些函數，它們將成為編程的救星。此外，學習編程的重點是抽 象，解決問題，解決問題，而這正是功能的全部內容。 \n', 'tags': '', 'url': '11 Check Primality Functions.html'}, {'title': '17 Decode A Web Page', 'text': "This is the first 4-chili exercise of this blog! We’ll see what people think, and decide whether or not to continue with 4-chili exercises in the future. \n 這是此博客的第一個4辣椒練習！我們將了解人們的想法，並決定將來是否繼續進行4辣椒練習。 Discussion(討論區) \n \n Libraries( 圖書館) \n requests( 要求) \n BeautifulSoup( 美麗湯) \n \n Libraries(圖書館) Many people have written libraries in Python that do not come with the standard  distribution of Python (like the\xa0 random \xa0 library mentioned \xa0 in a previous post ). These  libraries can do anything from machine learning to date and time formatting to meme  generation. If you have a task you need done, most likely someone has written a  library for it. 許多人都使用Python編寫了一些庫，這些庫不是Python的標準發行版所附帶的（例如前一篇文章中提到的 隨機庫）。這些庫可以執行從機器學習到日期和時間格式化到模因生成的所有操作。如果您有需要完成的任 務，很可能有人為它編寫了一個庫。 There are three main things to keep in mind when using a library( 使用庫時要記住三件事): 1.You need to install it. Installation in GNU/Linux based systems will generally be  easier than on Windows or OSX, but there will always be documentation for how to do it. 您需要安裝它。與基於Windows或OSX的系統相比，在基於GNU / Linux的系統上的安裝通常會更容易，但是 始終會有有關如何執行此操作的文檔。 2.You need to import it. At the top of your program, make sure you write the line \xa0 import requests , or whatever the name of your library is. Then you can use it to your  heart’s content. 您需要導入它。在程序的頂部，確保您編寫了行導入請求，或者庫的名稱是什麼。然後，您可以使用它來滿 足您的需求。 You need to read documentation. Someone else wrote it, so the rules might not be so  obvious. Anyone (or any group) that writes a Python package writes documentation for  it. Eventually, reading documentation will become second nature. 您需要閱讀文檔。有人寫的，所以規則可能不那麼明顯。編寫Python程序包的任何人（或任何小組）都會為 其編寫文檔。最終，閱讀文檔將成為第二天性。 Request(請求) One of the most useful libraries written for Python recently,\xa0 requests \xa0does “HTTP for  humans.” What this means in laymen’s terms is that it asks the internet things from  Python. When you type “ facebook.com ” into the browser, you are asking the internet to  show you Facebook’s homepage. 最近，為Python編寫的最有用的庫之一就是請求執行“人類HTTP”。用外行的話來說，這意味著它向Python 詢問互聯網問題。在瀏覽器中輸入“ facebook.com”時，您是在要求互聯網顯示Facebook主頁。 In the same way, a program can ask the internet something. It might not be “show me  Facebook”, but you can for example ask Github for a list of all the repositories that  the user “mprat” has. You can do this with an API (Application Programming Interface).  This exercise doesn’t use APIs, so we’ll talk more about those in a later post. 同樣，程序可以向互聯網詢問一些信息。它可能不是“向我顯示Facebook”，但是例如，您可以要求Github 提供用戶“ mprat”擁有的所有存儲庫的列表。您可以使用API（應用程序編程接口）來執行此操作。本練習 不使用API，因此我們將在以後的文章中進一步討論。 Back to showing the user a webpage. When I type “ facebook . com ” into the browser,  Facebook sends my browser a bunch of HTML (basically, code for how the website looks).  The browser then takes this HTML and shows it to me in a pretty way. (Fun fact: to  see the HTML of any page in a browser, right click on the page and “Inspect Element”  or “View Source” depending on your browser. In Chrome, “Inspect Element” will pop up a  module at the bottom of your page where you can see the HTML from the page. This  trick will come in handy when you’re doing the exercise. If you need to DO anything  with this HTML, better to use a program. More posts about this coming later.) If I  want to “see” a webpage with a program, all I need to do is ask it for it’s HTML and  read it.The ‘requests’ library does half of that job: it asks (requests, if you will)  a server for information. This could be just data (through an API - more later) or  in the case of this exercise, HTML. 返迴向用戶顯示網頁。當我在瀏覽器中鍵入“ facebook.com”時，Facebook向我的瀏覽器發送了一堆HTML （基本上是網站外觀的代碼）。然後瀏覽器將這個HTML並以漂亮的方式顯示給我。 （有趣的事實：要在瀏 覽器中查看任何頁面的HTML，請右鍵單擊該頁面，然後根據您的瀏覽器單擊“檢查元素”或“查看源代碼”。 在Chrome中，“檢查元素”將在底部彈出一個模塊您可以在頁面的其中看到HTML。如果您需要使用此HTML做 任何事情，最好使用一個程序。 ）如果我想“查看”帶有程序的網頁，我所要做的就是向其索要HTML並閱讀 它。“請求”庫完成了一半工作：它向服務器請求（如果需要的話）信息。這可能只是數據（通過API-稍後介 紹），或者在本練習中為HTML。 Look at the\xa0 documentation \xa0 for all the details you need. In this particular latest  version, all you need to do to ask a website for it’s HTML is(查看文檔以獲取所需的所有詳 細信息。在此特定的最新版本中，向網站詢問HTML所需要做的就是): \n  import requests\n  url = 'http://github.com'\n  r = requests.get(url)\n  r_html = r.text\n \n Now inside the variable\xa0 r_html , you have the HTML of the page as a string. Reading  (otherwise called \xa0 parsing ) happens with a different Python package. 現在，在變量r_html中，您將頁面的HTML作為字符串。讀取（否則稱為解析）發生在其他Python包中。 Beautiful soup(美麗湯) To solve our problem of parsing (reading, understanding, interpreting) the string of  HTML we got from\xa0 requests , we use the\xa0 BeautifulSoup \xa0library. 為了解決解析（讀取，理解，解釋）從請求中獲得的HTML字符串的問題，我們使用BeautifulSoup庫。 What it does is give a\xa0 hierarchical \xa0 (a pyramid structure) to the HTML in the document.  If you don’t know anything about HTML, the \xa0 Wikipedia \xa0 article is a good summary. For  the purposes of this exercise, you don’t need to know anything about HTML beyond being  able to look at it quickly. 它的作用是為文檔中的HTML提供分層結構（金字塔結構）。如果您對HTML一無所知，請參閱Wikipedia文章 。在本練習中，除了能夠快速查看HTML外，您無需了解其他任何有關HTML的知識。 Because \xa0 BeautifulSoup \xa0 takes care of interpreting our HTML for us, we can ask it things  like: “give me all the lines with \xa0 <p> \xa0 tags” or “find me the parent element to the \xa0 <title> \xa0 element”, etc.Your code would look something like this( 因為BeautifulSoup會為我 們解釋HTML，所以我們可以提出類似的要求：“給我所有帶有<p>標籤的行”或“為父元素找到<title>元素” ，等等。): \n  from bs4 import BeautifulSoup\n\n  # some requests code here for getting r_html \n\n  soup = BeautifulSoup(r_html)\n  title = soup.find('span', 'articletitle').string \n And you can do many more things in\xa0 BeautifulSoup , but I will leave you to explore  those by yourself or through other later exercises. 您可以在BeautifulSoup中做更多的事情，但是我將讓您自己或通過其他後續練習來探索這些內容。 \xa0 \n", 'tags': '', 'url': '17 Decode A Web Page.html'}, {'title': '18 Cows And Bulls', 'text': 'Create a program that will play the “cows and bulls” game with the user. The game works like this( 創建一個程序，將與用戶一起玩“牛與牛”遊戲。遊戲是這樣的) : \n Randomly generate a 4-digit number. Ask the user to guess a 4-digit number. For every digit that the user guessed correctly \xa0 in the correct place , they have a “cow”. For every digit the user guessed correctly \xa0 in the wrong place \xa0 is a “bull.” Every time the user makes a guess, tell them how many “cows” and “bulls” they have. Once the user guesses the correct number, the game is over. Keep track of the number of guesses the user makes throughout teh game and tell the user at the end. \n 隨機生成一個4位數字。要求用戶猜測一個4位數字。對於用戶在正確位置正確猜到的每個數字，他們都有一個“牛”。用戶在錯誤的位置正確猜出的每個數字都是“牛”。每次用戶猜測時，告訴他們他們有多少“牛”和“牛”。一旦用戶猜出正確的數字，遊戲就結束了。跟踪用戶在整個遊戲中所做的猜測數量，並在最後告訴用戶。 \n Say the number generated by the computer is 1038. An example interaction could look like this( 假設計算機生成的數字是1038。一個示例交互看起來像這樣): \n Welcome to the Cows and Bulls Game! \n  Enter a number: \n  >>> 1234\n  2 cows, 0 bulls\n  >>> 1256\n  1 cow, 1 bull\n  ... \n Until the user guesses the number. 直到用戶猜出數字。  concept for this week( 本週的概念) : 1. Randomness (we’ve covered this a few times before. Mainly in \xa0 a previous exercise .) 隨機性（我們之前已經討論過幾次了。主要是在以前的練習中。） 2.Functions (covered in a \xa0 previous exercise \xa0 also) 功能（也在上一練習中介紹過） 3.Main method 主要方法 Main method 主要方法 Since we have covered randomness and functions, we still need to cover the idea of a  “main” method. If you have programmed before, you will wonder why you haven’t needed  a main method so far in your Python code.First, here is how you do it( 由於我們已經涵蓋了 隨機性和函數，因此我們仍然需要涵蓋“主”方法的思想。如果您以前進行過編程，您會想知道為什麼到目前 為止在Python代碼中不需要主要方法。): \n def square(num):\n    return num * num\n\n  if __name__=="__main__":\n    user_num = input("Give me a number: ")\n    print(square(num)) \n Note that in both \xa0 __name__ \xa0 and \xa0 __main__ , there are TWO underscore ( _ ) characters. \n If you run this program, it behaves as expected: asking the use for a number and printing out the square in return. However, you might be wondering - how is this different from the way we’ve been writing programs until this point? \n 請注意，在__name__和__main__中，都有兩個下劃線（_）字符。\n\n如果您運行此程序，它的行為將與預期的一樣：要求使用數字並打印出正方形。但是，您可能想知道-到目前 為止，這與我們編寫程序的方式有何不同？ \n def square(num):\n    return num * num\n\n  user_num = input("Give me a number: ")\n  print(square(num))\n \n You are correct if you think the second example will have THE SAME BEHAVIOR as in the first case. At least the way we’ve been running Python files until this point. I will attempt to explain. \n 如果您認為第二個示例將具有與第一種情況相同的行為，則您是正確的。至少到現在為止，我們一直在運行 Python文件的方式。我將嘗試解釋。 \n Python does not have a specified entry point like many other languages (for example, C++ always looks for a \xa0 void main() \xa0 method to run). Python files and programs are executed line by line by the Python interpreter, from however the Python file or program is run. When the definition of a function is reached by the interpreter, the function is not run, but rather loaded to be run later. (We discussed this when we talked about functions in a \xa0 previous post .) Whatever is written outside of a function will get executed immediately - this includes creating variables and calling the functions that were previously loaded. \n Python沒有像許多其他語言一樣具有指定的入口點（例如，C ++始終尋找要運行的void main（）方法）。  Python解釋器逐行執行Python文件和程序，但是會運行Python文件或程序。當解釋器到達函數的定義時， 該函數不會運行，而是會加載以供以後運行。 （在上一篇文章中討論函數時，我們已經進行了討論。）在函 數外部編寫的任何內容都將立即執行-這包括創建變量和調用先前加載的函數。 There are (most commonly) two ways to run a Python file( 有（最常見的）兩種運行Python文件 的方式): 1.“Just running it” (which you can do from the terminal, through the “Run” button in  IDLE, etc.) 只需運行它”（您可以從終端通過IDLE中的“運行”按鈕執行此操作，等等。) 2.Importing the file as a module( 將文件導入為模塊) \n The first way is the way that you most likely have been using if you have been doing the exercises in this blog. If you have many files in a large project, this is how you run the “entry point” file in the project. \n The second way is more subtle: it is what happens when you write an \xa0 import \xa0 statement at the top of your file. In this exercise for example, you need to \xa0 import random \xa0 into your program to use the random module. Somewhere on your computer there is a file (or a group of Python files) that make up the \xa0 random \xa0 module, and in the process of importing them, what you are actually doing is running the file(s) from that module. \n When you have functions defined inside a file (with the \xa0 def \xa0 keyword, like the \xa0 def square \xa0 function above) and run a file, the function is not immediately run. You can think what happens is the function is stored for future use. \n Anything else in the file - variables created, functions that are called, operations done, etc - are executed immediately when a Python file is run. \n 第一種方法是您在本博客中進行練習時最可能使用的方法。如果大型項目中有許多文件，這就是在項目中運 行“入口點”文件的方式。第二種方法更加微妙：這是在文件頂部編寫導入語句時發生的。例如，在本練習中 ，您需要將random導入程序中才能使用random模塊。在計算機上的某個地方，有一個文件（或一組Python 文件）組成了隨機模塊，並且在導入它們的過程中，您實際上正在做的是從該模塊運行文件。當您在文件內 部定義了函數（使用def關鍵字，例如上面的def square函數）並運行文件時，該函數不會立即運行。您可 以認為會發生什麼事，該函數已存儲以備將來使用。運行Python文件時，文件中的所有其他內容-創建的變 量，調用的函數，完成的操作等-都會立即執行。 \n However, in the case where you are importing a Python file into another, you want to load all of the functions without creating variables or executing any functions. You just want to load them to use them later. How do you reconcile this problem? With the \xa0 if __name__=="__main__" \xa0 statement. Create your variables and all your functions inside this statement, and when you import your file into another, it will not mess up your program by creating variables or calling functions. \n What the \xa0 if __name__=="__main__" \xa0 statement from above does is ensure that variables that are created, functions that are called, operations that are done, etc ONLY when you directly run the file, not when you import it into another. \n \n 但是，在將Python文件導入到另一個文件的情況下，您希望加載所有函數而不創建變量或執行任何函數。您 只想加載它們以供以後使用。您如何調和這個問題？使用if __name __ ==“ __ main__”語句。在此語句 內創建變量和所有函數，並且在將文件導入另一個語句時，它不會通過創建變量或調用函數而使程序混亂。\n上面的if __name __ ==“ __ main__”語句的作用是確保僅在直接運行文件時（而不是在將文件導入到另 一個文件中時）創建的變量，調用的函數，完成的操作等。 \xa0 \n \n', 'tags': '', 'url': '18 Cows And Bulls.html'}, {'title': '23 File Overlap', 'text': 'Given two \xa0 .txt \xa0 files that have lists of numbers in them, find the numbers that are overlapping. \xa0 One \xa0 .txt \xa0 file \xa0 has a list of all prime numbers under 1000, and \xa0 the other \xa0 .txt \xa0 file \xa0 has a list of happy numbers up to 1000. \n (If you forgot, prime numbers are numbers that can’t be divided by any other number. And yes, happy numbers are a real thing in mathematics - you can \xa0 look it up on Wikipedia . The explanation is easier with an example, which I will describe below.) \n 給定兩個帶有數字列表的.txt文件，請查找重疊的數字。一個.txt文件包含一個所有1000以下的質數的列表 ，另一個.txt文件包含一個最大為1000的幸福數字的列表。（如果您忘記了，質數是不能除以任何其他數字 的數字。是的，快樂數是數學中的真實事物-您可以在Wikipedia上查找它。通過一個例子可以更容易地解釋 這一點，我將在下面進行說明。） Discussion(討論區) \n You’ll need to stitch together a few ideas of things I’ve previously talked about on this blog, so if you need a refresher in any of these topics, now is your chance! Of course, there are any number of ways to do this exercise, so these are only suggestions. \n 您需要將我之前在此博客上討論過的一些想法融合在一起，因此，如果您需要在這些主題中的任何一個方面 進行複習，現在就有機會！當然，有許多方法可以進行此練習，因此這些只是建議。 \n Topics(主題): \n \n Reading a file, in \xa0 Exercise 21 (在練習21中讀取文件) \n Number types and converting to integers from strings, in \xa0 Exercise 1 (練習1中的數字類型和從字符串轉換為整數) \n Lists, in \xa0 Exercise 3 \xa0 and \xa0 Exercise 5 (練習3和5中的清單) \n \n \n', 'tags': '', 'url': '23 File Overlap.html'}]};